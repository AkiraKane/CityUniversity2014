1) To find a smaller directory within text-full (but still larger than text-part), use:
	lewes:~$ du -h -d1 /data/extra/gutenberg/text-full
2) To configure a UI for yourself that you can monitor your own processes on, change the following SparkConf setting:
# 4040 is default - change this to something else, e.g. 1234 (but less obvious maybe):
	SparkConf().set("spark.ui.port", "1234")
If you are connected to the VPN, you can then visit http://lewes.nsqdc.city.ac.uk:1234 to monitor your job.
3) Spying: you can check process usage on Lewes using "top" and "ps -fu", to see whose jobs are taking the most %CPU, memory and how long they've been running. Start composing an email to their user ID to translate their name to Nikolay...
	lewes:~$ top
	lewes:~$ ps -fu acka630 #(me)
4) We've only got a 1GB disk limit each. I've asked for this to be increased, but no response yet. Before you run a really large job, figure out how many times bigger it is that something you've already run that saves to disk. If the answer is over 1GB (actually about 800MB as the spark install is 200MB and counts towards our quota), it will break.
5) To kill any, just enter kill <PID>:
	lewes:~$ kill 53575
6) Create a session: $ tmux new -s name-of-session
pick anything you want for the 'name-of-session' - this is just the name of the process you are running. You'll know when you are in a session as there will be a big green bar at the bottom of the terminal. You'll need to remember what you've called your session.
Then just run your code in the command line as you normally would.

7) To detach from the session type: Ctrl&B, D
Press Ctrl&B, then release and press D. This just takes you back to lewes while your code is happily running in your session. Now you can exit lewes and go and enjoy your day!

8) To return to your session: $ tmux attach-session -t name-of-session
Once you've let some time pass and want to see the results of what you've run, log back into lewes and type the above. This will take you back to your session and will show you the results from your code. 

9) Use du -h to get all directory sizes in a tree. To limit depth of search, add -d0 for root, -d1 for root and children, etc.
